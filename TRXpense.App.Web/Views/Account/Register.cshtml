@model TRXpense.App.Web.ViewModels.RegisterViewModel

@{
    ViewBag.Title = "Register";
}

<h1>Register New Employee</h1>
<hr />

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary("", new { @class = "text-danger" })

    <div class="registerForm">
        <div class="form-group">
            @Html.LabelFor(m => m.FirstName)
            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.LastName)
            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Email)
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.DateOfBirth)
            @Html.TextBoxFor(m => m.DateOfBirth, "{0:dd.MM.yyyy.}", new { @class = "form-control", placeholder = "dd.MM.yyyy." })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.OIB)
            @Html.TextBoxFor(m => m.OIB, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.CostCenter)
            @Html.DropDownListFor(m => m.CostCenter, new SelectList(Model.CostCenters, "Id", "Name"), "Select Cost Center", new { @class = "form-control" })
            @*@Html.ActionLink("Create new Cost Center", "CreateCostCenter", "CostCenter", null, new { @class = "modal-link" } )*@
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Position)
            @Html.TextBoxFor(m => m.Position, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Password)
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ConfirmPassword)
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.UserRole)
            @Html.DropDownList("UserRole", (IEnumerable<SelectListItem>)ViewBag.Roles, "-- Select Role --", new { @class = "form-control" })
            @*<input type="button" value="Create" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#myModal"
                onclick="location.href='@Url.Action("Create", "Role")'" />*@
        </div>
        <input type="submit" class="btn btn-primary" value="Register" />
    </div>
}

@* The normal bootstrap modal with out any content in the modal-content div. Note that the id matches the data_target from the link*@
<div id="modal-container" class="modal fade hidden-print" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    @* The normal bootstrap behavior is to only grab the content for the modal once, if you need to pull in different partial views then the data on the modal will have to be cleared.*@
    <script type="text/javascript">
        $(function () {
            $('#modal-container').on('hidden.bs.modal', function () {
                $(this).removeData('bs.modal');
                $('#modal-container .modal-content').empty();
            });
        });

        @* callback from form modal*@
        function success() {
            alert("Success!");
        }
    </script>
}