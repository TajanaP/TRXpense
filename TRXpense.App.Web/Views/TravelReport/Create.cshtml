@model TRXpense.App.Web.ViewModels.TravelReportVM

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="/">Home</a></li>
    <li class="breadcrumb-item"><a href="/TravelReport">Travel Reports</a></li>
    <li class="breadcrumb-item active">New Travel Report</li>
</ol>

<h2>New Travel Report</h2>
<hr />

@using (Html.BeginForm("Create", "TravelReport", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary("", new { @class = "alert alert-danger" })

    <div>
        <div class="form-group">
            @Html.LabelFor(m => m.EmployeeId, new { @class = "col-md-2 control-label" })
            @Html.EditorFor(m => m.EmployeeId, new { htmlAttributes = new { @class = "col-md-4 form-control", disabled = "disabled", @Value = ViewBag.User } })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Departure, new { @class = "col-md-2 control-label" })
            <div class="form-group input-group date" id="datetimepickerDeparture">
                @Html.EditorFor(m => m.Departure, new { htmlAttributes = new { @class = "form-control", placeholder = "YYYY.MM.DD", onkeydown = "return false", onpaste = "return false" } })
                <span class="input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
            @Html.LabelFor(m => m.Return, new { @class = "col-md-2 control-label" })
            <div class="form-group input-group date" id="datetimepickerReturn">
                @Html.EditorFor(m => m.Return, new { htmlAttributes = new { @class = "form-control", placeholder = "YYYY.MM.DD", onkeydown = "return false", onpaste = "return false" } })
                <span class="input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.CountryAllowanceId, new { @class = "col-md-2 control-label" })
            @Html.DropDownListFor(m => m.CountryAllowanceId, (List<SelectListItem>)ViewBag.Countries, new { @class = "col-md-4 form-control", @onchange = "FillAllowanceAmount()", id = "Country" })
            @Html.LabelFor(m => m.DailyAllowance, new { @class = "col-md-2 control-label" })
            @Html.EditorFor(m => m.DailyAllowance, new { htmlAttributes = new { @class = "col-md-4 form-control", disabled = "disabled", id = "allowanceAmount" } })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.City, new { @class = "col-md-2 control-label" })
            @Html.EditorFor(m => m.City, new { htmlAttributes = new { @class = "col-md-4 form-control" } })
            @Html.LabelFor(m => m.ReasonForTravel, new { @class = "col-md-2 control-label" })
            @Html.EditorFor(m => m.ReasonForTravel, new { htmlAttributes = new { @class = "col-md-4 form-control" } })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.VehicleType, new { @class = "col-md-2 control-label" })
            @Html.EnumDropDownListFor(m => m.VehicleType, "-- Select Vehicle --", new { @class = "col-md-4 form-control", id = "VehicleType" })
            <div id="hiddenRegistrationDropdown">
                @Html.LabelFor(m => m.VehicleId, new { @class = "col-md-2 control-label" })
                @Html.DropDownListFor(m => m.VehicleId, (List<SelectListItem>)ViewBag.Vehicles, new { @class = "col-md-4 form-control", id = "VehicleId" })
            </div>
        </div>
        <div id="hiddenMileageForm">
            <div class="form-group">
                @Html.LabelFor(m => m.StartMileage, new { @class = "col-md-2 control-label" })
                @Html.EditorFor(m => m.StartMileage, new { htmlAttributes = new { @class = "col-md-4 form-control", id = "StartMileage" } })
                @Html.LabelFor(m => m.EndMileage, new { @class = "col-md-2 control-label" })
                @Html.EditorFor(m => m.EndMileage, new { htmlAttributes = new { @class = "col-md-4 form-control", id = "EndMileage" } })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Deposit, new { @class = "col-md-2 control-label" })
            <div id="depositCheckbox" class="col-md-2 form-group">
                @Html.CheckBoxFor(m => m.Deposit, new { @class = "", id = "Deposit" })
            </div>
            <div id="hiddenDepositField">
                @Html.LabelFor(m => m.DepositAmount, new { @class = "col-md-2 control-label" })
                @Html.EditorFor(m => m.DepositAmount, new { htmlAttributes = new { @class = "col-md-4 form-control", id = "DepositField" } })
            </div>
        </div>
        <hr />
        <input type="submit" class="btn btn-primary col-md-offset-9" value="Save" />
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $('#datetimepickerDeparture').datetimepicker({
            format: ''
        }).on('changeDate', function (ev) {
            $(this).datetimepicker('hide');
        });

        $('#datetimepickerReturn').datetimepicker({
            format: ''
        }).on('changeDate', function (ev) {
            $(this).datetimepicker('hide');
        });

        // show mileage fields and dropdown with registrations if "Company car" is selected
        // show mileage fields if "Private Car" is selected
        $(function () {
            $('#VehicleType').change(function () {
                var value = $(this).val();
                if (value == '1') {                                                             // COMPANY CAR
                    $('#hiddenRegistrationDropdown').show();
                    $('#VehicleId').prop("required", true);
                    $.validator.messages.required = 'Company Car Registration is required.';
                    $('#hiddenMileageForm').show();
                    $('#StartMileage').prop("required", false);
                    $('#EndMileage').prop("required", false);
                    $('#StartMileage').val(null);
                    $('#EndMileage').val(null);
                } else if (value == '0') {                                                      // PRIVATE CAR
                    $('#hiddenMileageForm').show();
                    $('#StartMileage').prop("required", true);
                    $('#EndMileage').prop("required", true);
                    $('#StartMileage').val(null);
                    $('#EndMileage').val(null);
                    $.validator.messages.required = 'Mileage field is required.';
                    $('#hiddenRegistrationDropdown').hide();
                    $('#VehicleId').prop("required", false);
                    $('#VehicleId').val(null);
                } else {                                                                        // OTHER
                    $('#hiddenRegistrationDropdown').hide();
                    $('#VehicleId').prop("required", false);
                    $('#VehicleId').val(null);
                    $('#hiddenMileageForm').hide();
                    $('#StartMileage').prop("required", false);
                    $('#EndMileage').prop("required", false);
                    $('#StartMileage').val(null);
                    $('#EndMileage').val(null);
                }
            });
        });

        // show deposit field if deposit checkbox is checked
        $('#Deposit').change(function () {
            if ($(this).is(":checked")) {
                $("#hiddenDepositField").show();
                $('#DepositField').prop("required", true);
                $.validator.messages.required = 'Deposit Amount is required.';
            }
            else {
                $("#hiddenDepositField").hide();
                $('#DepositField').prop("required", false);
                $('#DepositField').val(null);
            }
        });

        // fill allowance (amount & currency) based on selected country
        function FillAllowanceAmount() {
            var CountryId = $('#Country').val();
            $.ajax({
                url: '@Url.Action("GetAllowanceForCountry")',
                dataType: "JSON",
                data: { countryId: CountryId },
                success: function (result) {
                    $('#allowanceAmount').val(result);
                }
            });
        }

    </script>
}